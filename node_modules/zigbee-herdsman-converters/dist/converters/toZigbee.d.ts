import type { Tz } from "../lib/types";
export declare const on_off: Tz.Converter;
export declare const light_color: Tz.Converter;
export declare const light_colortemp: Tz.Converter;
export declare const read: Tz.Converter;
export declare const write: Tz.Converter;
export declare const command: Tz.Converter;
export declare const factory_reset: Tz.Converter;
export declare const identify: Tz.Converter;
export declare const zcl_command: Tz.Converter;
export declare const arm_mode: Tz.Converter;
export declare const battery_percentage_remaining: Tz.Converter;
export declare const battery_voltage: Tz.Converter;
export declare const power_on_behavior: Tz.Converter;
export declare const light_color_mode: Tz.Converter;
export declare const light_color_options: Tz.Converter;
export declare const lock: Tz.Converter;
export declare const lock_auto_relock_time: Tz.Converter;
export declare const lock_sound_volume: Tz.Converter;
export declare const pincode_lock: Tz.Converter;
export declare const lock_userstatus: Tz.Converter;
export declare const cover_via_brightness: Tz.Converter;
export declare const warning: Tz.Converter;
export declare const ias_max_duration: Tz.Converter;
export declare const warning_simple: Tz.Converter;
export declare const squawk: Tz.Converter;
export declare const cover_state: Tz.Converter;
export declare const cover_position_tilt: Tz.Converter;
export declare const cover_mode: Tz.Converter;
export declare const occupancy_timeout: Tz.Converter;
export declare const level_config: Tz.Converter;
export declare const ballast_config: Tz.Converter;
export declare const light_brightness_step: Tz.Converter;
export declare const light_brightness_move: Tz.Converter;
export declare const light_colortemp_step: Tz.Converter;
export declare const light_colortemp_move: Tz.Converter;
export declare const light_color_and_colortemp_via_color: Tz.Converter;
export declare const light_hue_saturation_step: Tz.Converter;
export declare const light_hue_saturation_move: Tz.Converter;
export declare const light_onoff_brightness: Tz.Converter;
export declare const light_colortemp_startup: Tz.Converter;
export declare const light_color_colortemp: Tz.Converter;
export declare const effect: Tz.Converter;
export declare const thermostat_remote_sensing: Tz.Converter;
export declare const thermostat_weekly_schedule: Tz.Converter;
export declare const thermostat_system_mode: Tz.Converter;
export declare const acova_thermostat_system_mode: Tz.Converter;
export declare const thermostat_control_sequence_of_operation: Tz.Converter;
export declare const thermostat_programming_operation_mode: Tz.Converter;
export declare const thermostat_temperature_display_mode: Tz.Converter;
export declare const thermostat_keypad_lockout: Tz.Converter;
export declare const thermostat_temperature_setpoint_hold: Tz.Converter;
export declare const thermostat_temperature_setpoint_hold_duration: Tz.Converter;
export declare const fan_mode: Tz.Converter;
export declare const fan_speed: Tz.Converter;
export declare const thermostat_local_temperature: Tz.Converter;
export declare const thermostat_outdoor_temperature: Tz.Converter;
export declare const thermostat_local_temperature_calibration: Tz.Converter;
export declare const thermostat_occupancy: Tz.Converter;
export declare const thermostat_clear_weekly_schedule: Tz.Converter;
export declare const thermostat_pi_heating_demand: Tz.Converter;
export declare const thermostat_running_state: Tz.Converter;
export declare const thermostat_occupied_heating_setpoint: Tz.Converter;
export declare const thermostat_unoccupied_heating_setpoint: Tz.Converter;
export declare const thermostat_occupied_cooling_setpoint: Tz.Converter;
export declare const thermostat_unoccupied_cooling_setpoint: Tz.Converter;
export declare const thermostat_setpoint_raise_lower: Tz.Converter;
export declare const thermostat_relay_status_log: Tz.Converter;
export declare const thermostat_running_mode: Tz.Converter;
export declare const thermostat_min_heat_setpoint_limit: Tz.Converter;
export declare const thermostat_max_heat_setpoint_limit: Tz.Converter;
export declare const thermostat_min_cool_setpoint_limit: Tz.Converter;
export declare const thermostat_max_cool_setpoint_limit: Tz.Converter;
export declare const thermostat_ac_louver_position: Tz.Converter;
export declare const electrical_measurement_power: Tz.Converter;
export declare const electrical_measurement_power_phase_b: Tz.Converter;
export declare const electrical_measurement_power_phase_c: Tz.Converter;
export declare const metering_power: Tz.Converter;
export declare const metering_status: Tz.Converter;
export declare const metering_extended_status: Tz.Converter;
export declare const currentsummdelivered: Tz.Converter;
export declare const currentsummreceived: Tz.Converter;
export declare const frequency: Tz.Converter;
export declare const electrical_measurement_power_reactive: Tz.Converter;
export declare const powerfactor: Tz.Converter;
export declare const acvoltage: Tz.Converter;
export declare const acvoltage_phase_b: Tz.Converter;
export declare const acvoltage_phase_c: Tz.Converter;
export declare const accurrent: Tz.Converter;
export declare const accurrent_phase_b: Tz.Converter;
export declare const accurrent_phase_c: Tz.Converter;
export declare const temperature: Tz.Converter;
export declare const humidity: Tz.Converter;
export declare const elko_power_status: Tz.Converter;
export declare const elko_relay_state: Tz.Converter;
export declare const elko_local_temperature_calibration: Tz.Converter;
export declare const livolo_socket_switch_on_off: Tz.Converter;
export declare const livolo_switch_on_off: Tz.Converter;
export declare const livolo_dimmer_level: Tz.Converter;
export declare const livolo_cover_state: Tz.Converter;
export declare const livolo_cover_position: Tz.Converter;
export declare const livolo_cover_options: Tz.Converter;
export declare const ZigUP_lock: Tz.Converter;
export declare const LS21001_alert_behaviour: Tz.Converter;
export declare const STS_PRS_251_beep: Tz.Converter;
export declare const SPZ01_power_outage_memory: Tz.Converter;
export declare const tuya_relay_din_led_indicator: Tz.Converter;
export declare const kmpcil_res005_on_off: Tz.Converter;
export declare const hue_wall_switch_device_mode: Tz.Converter;
export declare const danfoss_thermostat_occupied_heating_setpoint: Tz.Converter;
export declare const danfoss_thermostat_occupied_heating_setpoint_scheduled: Tz.Converter;
export declare const danfoss_mounted_mode_active: Tz.Converter;
export declare const danfoss_mounted_mode_control: Tz.Converter;
export declare const danfoss_thermostat_vertical_orientation: Tz.Converter;
export declare const danfoss_external_measured_room_sensor: Tz.Converter;
export declare const danfoss_radiator_covered: Tz.Converter;
export declare const danfoss_viewing_direction: Tz.Converter;
export declare const danfoss_algorithm_scale_factor: Tz.Converter;
export declare const danfoss_heat_available: Tz.Converter;
export declare const danfoss_heat_required: Tz.Converter;
export declare const danfoss_day_of_week: Tz.Converter;
export declare const danfoss_trigger_time: Tz.Converter;
export declare const danfoss_window_open_feature: Tz.Converter;
export declare const danfoss_window_open_internal: Tz.Converter;
export declare const danfoss_window_open_external: Tz.Converter;
export declare const danfoss_load_balancing_enable: Tz.Converter;
export declare const danfoss_load_room_mean: Tz.Converter;
export declare const danfoss_load_estimate: Tz.Converter;
export declare const danfoss_preheat_status: Tz.Converter;
export declare const danfoss_adaptation_status: Tz.Converter;
export declare const danfoss_adaptation_settings: Tz.Converter;
export declare const danfoss_adaptation_control: Tz.Converter;
export declare const danfoss_regulation_setpoint_offset: Tz.Converter;
export declare const danfoss_output_status: Tz.Converter;
export declare const danfoss_room_status_code: Tz.Converter;
export declare const danfoss_floor_sensor_mode: Tz.Converter;
export declare const danfoss_floor_min_setpoint: Tz.Converter;
export declare const danfoss_floor_max_setpoint: Tz.Converter;
export declare const danfoss_system_status_code: Tz.Converter;
export declare const danfoss_system_status_water: Tz.Converter;
export declare const danfoss_multimaster_role: Tz.Converter;
export declare const ZMCSW032D_cover_position: Tz.Converter;
export declare const namron_thermostat: Tz.Converter;
export declare const namron_thermostat_child_lock: Tz.Converter;
export declare const easycode_auto_relock: Tz.Converter;
export declare const tuya_led_control: Tz.Converter;
export declare const tuya_led_controller: Tz.Converter;
export declare const EMIZB_132_mode: Tz.Converter;
export declare const eurotronic_host_flags: Tz.Converter;
export declare const eurotronic_error_status: Tz.Converter;
export declare const eurotronic_current_heating_setpoint: Tz.Converter;
export declare const eurotronic_valve_position: Tz.Converter;
export declare const eurotronic_trv_mode: Tz.Converter;
export declare const eurotronic_child_lock: Tz.Converter;
export declare const eurotronic_mirror_display: Tz.Converter;
export declare const stelpro_thermostat_outdoor_temperature: Tz.Converter;
export declare const DTB190502A1_LED: Tz.Converter;
export declare const ptvo_switch_trigger: Tz.Converter;
export declare const ptvo_switch_uart: Tz.Converter;
export declare const ptvo_switch_analog_input: Tz.Converter;
export declare const tint_scene: Tz.Converter;
export declare const bticino_4027C_cover_state: Tz.Converter;
export declare const bticino_4027C_cover_position: Tz.Converter;
export declare const legrand_device_mode: Tz.Converter;
export declare const legrand_pilot_wire_mode: Tz.Converter;
export declare const legrand_power_alarm: Tz.Converter;
export declare const diyruz_freepad_on_off_config: Tz.Converter;
export declare const TYZB01_on_off: Tz.Converter;
export declare const diyruz_geiger_config: Tz.Converter;
export declare const diyruz_airsense_config: Tz.Converter;
export declare const diyruz_zintercom_config: Tz.Converter;
export declare const power_source: Tz.Converter;
export declare const ts0201_temperature_humidity_alarm: Tz.Converter;
export declare const heiman_ir_remote: Tz.Converter;
export declare const scene_store: Tz.Converter;
export declare const scene_recall: Tz.Converter;
export declare const scene_add: Tz.Converter;
export declare const scene_remove: Tz.Converter;
export declare const scene_remove_all: Tz.Converter;
export declare const scene_rename: Tz.Converter;
export declare const TS0003_curtain_switch: Tz.Converter;
export declare const ts0216_duration: Tz.Converter;
export declare const ts0216_volume: Tz.Converter;
export declare const ts0216_alarm: Tz.Converter;
export declare const tuya_cover_calibration: Tz.Converter;
export declare const tuya_cover_reversal: Tz.Converter;
export declare const moes_cover_calibration: Tz.Converter;
export declare const ZM35HQ_attr: Tz.Converter;
export declare const TS0210_sensitivity: Tz.Converter;
export declare const viessmann_window_open: Tz.Converter;
export declare const viessmann_window_open_force: Tz.Converter;
export declare const viessmann_assembly_mode: Tz.Converter;
export declare const dawondns_only_off: Tz.Converter;
export declare const idlock_master_pin_mode: Tz.Converter;
export declare const idlock_rfid_enable: Tz.Converter;
export declare const idlock_service_mode: Tz.Converter;
export declare const idlock_lock_mode: Tz.Converter;
export declare const idlock_relock_enabled: Tz.Converter;
export declare const schneider_pilot_mode: Tz.Converter;
export declare const schneider_dimmer_mode: Tz.Converter;
export declare const wiser_dimmer_mode: Tz.Converter;
export declare const schneider_temperature_measured_value: Tz.Converter;
export declare const schneider_thermostat_system_mode: Tz.Converter;
export declare const schneider_thermostat_occupied_heating_setpoint: Tz.Converter;
export declare const schneider_thermostat_control_sequence_of_operation: Tz.Converter;
export declare const schneider_thermostat_pi_heating_demand: Tz.Converter;
export declare const schneider_thermostat_keypad_lockout: Tz.Converter;
export declare const wiser_fip_setting: Tz.Converter;
export declare const wiser_hact_config: Tz.Converter;
export declare const wiser_zone_mode: Tz.Converter;
export declare const wiser_vact_calibrate_valve: Tz.Converter;
export declare const wiser_sed_zone_mode: Tz.Converter;
export declare const wiser_sed_occupied_heating_setpoint: Tz.Converter;
export declare const wiser_sed_thermostat_local_temperature_calibration: Tz.Converter;
export declare const wiser_sed_thermostat_keypad_lockout: Tz.Converter;
export declare const sihas_set_people: Tz.Converter;
export declare const tuya_operation_mode: Tz.Converter;
export declare const led_on_motion: Tz.Converter;
export declare const ignore_transition: Tz.Converter;
export declare const ignore_rate: Tz.Converter;
export declare const light_onoff_restorable_brightness: Tz.Converter;
export declare const ptvo_switch_light_brightness: Tz.Converter;
export declare const TS110E_options: Tz.Converter;
export declare const TS110E_onoff_brightness: Tz.Converter;
export declare const TS110E_light_onoff_brightness: Tz.Converter;
//# sourceMappingURL=toZigbee.d.ts.map